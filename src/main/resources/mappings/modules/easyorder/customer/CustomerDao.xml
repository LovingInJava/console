<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easyorder.modules.customer.dao.CustomerDao">
    
	<sql id="customerColumns">
		a.id AS "id",
		a.name AS "name",
		a.customer_no AS "customerNo",
		a.account_no AS "accountNo",
		a.password AS "password",
		a.mt_cust_type_cd AS "mtCustTypeCd",
		a.mt_city_cd AS "mtCityCd",
		a.mt_customer_source_cd AS "mtCustomerSourceCd",
		a.tel AS "tel",
		a.phone AS "phone",
		a.email AS "email",
		a.head_pic_url AS "headPicUrl",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.version AS "version"
	</sql>
	
	<sql id="customerJoins">
	</sql>
	
    
	<select id="get" resultType="Customer" >
		SELECT 
			<include refid="customerColumns"/>,
			c.id AS "contactId",
			c.name AS "contactName",
			c.address AS "contactAddress",
			c.email AS "contactEmail",
			c.phone AS "contactPhone",
			cg.name AS "customerGroupName",
			cg.id AS "customerGroupId",
			sc.mt_customer_status_cd AS "mtCustomerStatusCd"
		FROM customer a
		LEFT JOIN supplier_customer sc ON sc.customer_id = a.id
		LEFT JOIN contact c ON c.customer_id = a.id
		LEFT JOIN customer_group cg ON sc.customer_group_id = cg.id
		<include refid="customerJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
			<if test="supplierId != null and supplierId != ''">
				AND sc.supplier_id = #{supplierId}
			</if>
			<if test="accountNo != null and accountNo != ''">
				AND a.account_no = #{accountNo}
			</if>
		</where>
	</select>  
	
	<select id="findList" resultType="Customer" >
		SELECT
			<include refid="customerColumns"/>,
			c.id AS "contactId",
			c.name AS "contactName",
			c.address AS "contactAddress",
			c.email AS "contactEmail",
			c.phone AS "contactPhone",
			cg.name AS "customerGroupName", 
			cg.id AS "customerGroupId",
			sc.mt_customer_status_cd AS "mtCustomerStatusCd"
		FROM customer a
		LEFT JOIN supplier_customer sc ON sc.customer_id = a.id
		LEFT JOIN contact c ON c.customer_id = a.id
		LEFT JOIN customer_group cg ON sc.customer_group_id = cg.id
		<include refid="customerJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="name != null and name != ''">
				AND a.name LIKE 
					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if>
					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if>
					<if test="dbName == 'mysql'">concat('%',#{name},'%')</if>
			</if>
			<if test="customerGroupId != null and customerGroupId != ''">
				AND cg.id = #{customerGroupId}
			</if>
			
			<if test="mtCityCd != null and mtCityCd != ''">
				AND a.mt_city_cd = #{mtCityCd}
			</if>
			
			<if test="supplierId != null and supplierId != ''">
				AND sc.supplier_id = #{supplierId} 
			</if>
			
			<if test="accountNo != null and accountNo != ''">
				AND a.account_no = #{accountNo}
			</if>
			
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="Customer" >
		SELECT 
			<include refid="customerColumns"/>
		FROM customer a
		<include refid="customerJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		 
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when> 
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO customer(
			id,
			name,
			customer_no,
			account_no,
			password,
			mt_cust_type_cd,
			mt_customer_status_cd,
			mt_city_cd,
			mt_customer_source_cd,
			tel,
			phone,
			email,
			head_pic_url,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			version
		) VALUES (
			#{id},
			#{name},
			#{customerNo},
			#{accountNo},
			#{password},
			#{mtCustTypeCd},
			#{mtCustomerStatusCd},
			#{mtCityCd},
			#{mtCustomerSourceCd},
			#{tel},
			#{phone},
			#{email},
			#{headPicUrl},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{version}
		)
	</insert>
	
	<update id="update">
		UPDATE customer SET 	
			name = #{name},
			customer_no = #{customerNo},
			account_no = #{accountNo},
			password = #{password},
			mt_cust_type_cd = #{mtCustTypeCd},
			mt_customer_status_cd = #{mtCustomerStatusCd},
			mt_city_cd = #{mtCityCd},
			mt_customer_source_cd = #{mtCustomerSourceCd},
			tel = #{tel},
			phone = #{phone},
			email = #{email},
			head_pic_url = #{headPicUrl},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			version = #{version}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM customer
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE customer SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="Customer" statementType="STATEMENT">
		select * FROM customer  where ${propertyName} = '${value}'
	</select>
	
	<select id="findByCondition" resultType="Customer">
		SELECT 
			<include refid="customerColumns"/>
		FROM
			customer a
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="accountNo != null and accountNo != ''">
				AND a.account_no = #{accountNo}
			</if>
		</where>
	</select>
	
</mapper>