<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easyorder.modules.product.dao.ProductSpecificationDao">
    
	<sql id="productSpecificationColumns">
		a.id AS "id",
		a.product_id AS "productId",
		a.supplier_id AS "supplierId",
		a.specification_item_path AS "specificationItemPath",
		a.specification_no AS "specificationNo",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		a.version AS "version"
	</sql>
	
	<sql id="productSpecificationJoins">
	</sql>
	
    
	<select id="get" resultType="ProductSpecification" >
		SELECT 
			<include refid="productSpecificationColumns"/>
		FROM product_specification a
		<include refid="productSpecificationJoins"/>
		<where>
			<if test="id != null and id != ''">
				AND a.id = #{id}
			</if>
			<if test="productId != null and productId != ''">
				AND a.product_id = #{productId}
			</if>
			<if test="supplierId != null and supplierId != ''">
				AND a.supplier_id = #{supplierId}
			</if>
		</where>
	</select>
	
	<select id="findList" resultType="ProductSpecification" >
		SELECT 
			<include refid="productSpecificationColumns"/>
		FROM product_specification a
		<include refid="productSpecificationJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="productId != null and productId != ''">
				AND a.product_id = #{productId}
			</if>
			<if test="supplierId != null and supplierId != ''">
				AND a.supplier_id = #{supplierId}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="ProductSpecification" >
		SELECT 
			<include refid="productSpecificationColumns"/>
		FROM product_specification a
		<include refid="productSpecificationJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="productId != null and productId != ''">
				AND a.product_id = #{productId}
			</if>
			<if test="supplierId != null and supplierId != ''">
				AND a.supplier_id = #{supplierId}
			</if>
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO product_specification(
			id,
			product_id,
			supplier_id,
			specification_item_path,
			specification_no,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag,
			version
		) VALUES (
			#{id},
			#{productId},
			#{supplierId},
			#{specificationItemPath},
			#{specificationNo},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag},
			#{version}
		)
	</insert>
	
	<update id="update">
		UPDATE product_specification SET 	
			product_id = #{productId},
			supplier_id = #{supplierId},
			specification_item_path = #{specificationItemPath},
			specification_no = #{specificationNo},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks},
			version = #{version}
		WHERE id = #{id}
	</update>
	
	
	<!--物理删除-->
	<update id="delete">
		DELETE FROM product_specification
		WHERE id = #{id}
	</update>
	
	<!--逻辑删除-->
	<update id="deleteByLogic">
		UPDATE product_specification SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	
	<!-- 根据实体名称和字段名称和字段值获取唯一记录 -->
	<select id="findUniqueByProperty" resultType="ProductSpecification" statementType="STATEMENT">
		select * FROM product_specification  where ${propertyName} = '${value}'
	</select>
	
</mapper>